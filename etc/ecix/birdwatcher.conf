#
# Birdwatcher Configuration
#

[server]
# Restrict access to certain IPs. Leave empty to allow from all.
allow_from = []

# All modules:
#   status
#   protocols
#   protocols_bgp
#   symbols
#   symbols_tables
#   symbols_protocols
#   routes_protocol
#   routes_table
#   routes_count_protocol
#   routes_count_table
#   route_net
#   routes_filtered
#   routes_prefixed
#   routes_noexport
#   routes_dump
#
modules_enabled = ["status", "protocols_bgp", "routes_protocol", "routes_peer"]

[status]
#
# Where to get the reconfigure timestamp from:
# Available sources: bird, config_regex, config_modified
#
reconfig_timestamp_source = "bird"
reconfig_timestamp_match = "# Created: (.*)"

# Remove fields e.g. last_reboot
filter_fields = []

[ratelimit]
enabled = true
requests_per_minute = 10


[bird]
listen = "0.0.0.0:29188"
config = "/etc/bird.conf"
birdc  = "/sbin/birdc"


[bird6]
listen = "0.0.0.0:29189"
config = "/etc/bird6.conf"
birdc  = "/sbin/birdc6"

[parser]
# Remove fields e.g. interface
filter_fields = []

# Enable support for multitable configurations
per_peer_tables = true

# Rewrite protocols:
# Apply a regular expression match to the protocol 
peer_protocol_match = 'ID(.*)'
# Use the capture groups as variables
pipe_protocol_prefix = 'P$1'
# See https://golang.org/pkg/regexp/#Regexp.Expand
# for more information on how to use these variables.
